
server.port=8084
spring.datasource.driver-class-name = org.postgresql.Driver
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/fb_google?stringtype=unspecified
spring.datasource.username = postgres
spring.datasource.password = postgres
# Show or not log for each sql query
spring.jpa.show-sql = false
#
#
# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Allows Hibernate to generate SQL optimized for a particular DBMS
#

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


loggin.level.root = TRACE
spring.main.allow-bean-definition-overriding=true

# Redis Config
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.data.redis.repositories.enabled= false

#Sometimes url1 works sometime dont.
google.token.verification.url1=https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=
gogole.token.verification.uril2=https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=

facebook.token.verification.url=https://graph.facebook.com/me?fields=id,email,first_name,gender,name,last_name&access_token=
facebook.dummy.access.token.generator.url=https://graph.facebook.com/oauth/access_token
facebook.dummy.access.token.verification.url=https://graph.facebook.com/debug_token



reset.password.encryptionKey=ABCDEFGHIJKLMNOP
reset.password.characterEncoding=UTF8
reset.password.cipherTransformation=AES/CBC/PKCS5PADDING
reset.password.aesEncryptionAlgorithem=AES

amazon.aws.access.key=AKIAITPGBFAL5GKEUJIA
amazon.aws.secret.key=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
amazon.aws.bucken.name=gaian-tenant-profile-pic
amazon.aws.region=us-east-2

#To increase the upload file size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


aws.filePath.bu=business-profile/BusinessUserProfileImage

###################################################################
reset.password.email.host=smtp.gmail.com
reset.password.email.port=587
reset.password.email.id=avinash.patel@gaiansolutions.com
reset.password.email.pwd=*GAvinashmi6oo7#
reset.password.email.provider=GMAIL
reset.password.email.subject=SICARIO

###################################################################
auth.grantTypePassword=password
auth.authorizationCode=authorization_code
auth.refreshToken=refresh_token
auth.implicit=implicit
auth.scopeRead=read
auth.scopeWrite=write
auth.trust=trust
auth.accessTokenValiditySeconds=4200
auth.refreshTokenValiditySeconds=2160
auth.resourceId=resource_id



####################Consumer###########################
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.session.timeout=30000


####################Producer#############################
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432




#auth.clientId=comjob
#auth.clientSecret=$2a$10$KlY3GmTLuUdDcbU7ewEwuuTRxwYVCMOcVFG7NG2QxqWJTbhQtzQo6
auth.clientId=0oa71ctnSxLOSmSwE5d5
#auth.clientSecret=Og2n9qDdZIKZgGvGrpks0bPp861AnwS_XWJWumLn
auth.clientSecret=$2y$12$JeKuQ5yUQLuZ03cEsRgUm.JX6lm/C6qN3ALHWaWQmHQNrPsc3EKjG 
auth.jwt.signingKey=ZTkyZmZhOTdhNTVlNTQ1MWYxMTg5MGI5NGExZTE0MGE4ODY2ODQ2ZGM2M2JjNDc4MGFlNGM3OWEzMDE5NzM4ZTViN2IwNWQ3ZWQ1YWQ4NWQ1Mzg0ZTJiMGRlYTQwOWY3NDhhYmNhOWNkNjVlYTM3NzliZGZmZjlhYjljZTBjYWM=



otp.expiry.time=30
token.expiry.time=30
spring.thymeleaf.enabled=false
otp.start.range=100000
otp.end.range=900000




